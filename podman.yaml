apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  data:
    nginx.conf: |
      user  nginx;
      worker_processes  auto;
      pid        /var/run/nginx.pid;
      include /etc/nginx/modules-enabled/*.conf;

      events {
          worker_connections  1024;
      }

      http {
          include       /etc/nginx/mime.types;
          default_type  application/octet-stream;

          log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

          access_log  /var/log/nginx/access.log  main;
          error_log  /var/log/nginx/error.log;

          sendfile        on;
          tcp_nopush      on;
          tcp_nodelay     on;
          keepalive_timeout  65;
          types_hash_max_size 2048;

          server {
              listen 80 default_server;
              server_name example.com;

              location /.well-known/acme-challenge/ {
                  root /usr/share/nginx/html/.well-known/acme-challenge/;
              }

              location / {
                  return 301 https://$host$request_uri;
              }
          }

          server {
              listen 443 ssl;
              server_name example.com;

              ssl_dhparam /path/to/dhparam;
              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
              ssl_prefer_server_ciphers off;
              add_header Strict-Transport-Security "max-age=63072000" always;
              ssl_stapling on;
              ssl_stapling_verify on;

              ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

              location / {
                  proxy_pass http://node-app:3000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
      }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-app
  template:
    metadata:
      labels:
        app: node-app
    spec:
      containers:
      - name: node-app
        image: node:alpine
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /app
          name: node-app
        workingDir: /app
        command: ["npm", "start"]
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          subPath: nginx.conf
        - mountPath: /etc/letsencrypt
          name: etc-letsencrypt
        - mountPath: /usr/share/nginx/html
          name: nginx-html
      - name: certbot
        image: certbot/certbot
        command: ["sh", "-c"]
        args:
        - |
          certbot \
              certonly \
              -d example.com \
              --webroot \
              --webroot-path=/usr/share/nginx/html \
              --email $CERTBOT_EMAIL \
              --agree-tos \
              --no-eff-email \
              --staging \
              --test-cert
      volumeMounts:
      - mountPath: /etc/letsencrypt
        name: etc-letsencrypt
      - mountPath: /usr/share/nginx/html
        name: nginx-html
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: etc-letsencrypt
        hostPath:
          path: ./data/letsencrypt
          type: DirectoryOrCreate
      - name: nginx-html
        hostPath:
          path: ./data/nginx-html
          type: DirectoryOrCreate
      - name: node-app
        hostPath:
          path: ./
